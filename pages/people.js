import * as React from "react";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { useRouter } from "next/router";

export async function getServerSideProps(context) {
  const res = await fetch("http://localhost:3000/api/list-people");
  const res2 = await fetch("http://localhost:3000/api/list-pets");
  const data = await res.json();
  const data2 = await res2.json();

  if (!data || !data2) {
    return {
      notFound: true,
    };
  }

  return {
    props: {
      people: data.data,
      pets: data2.data,
    }, // will be passed to the page component as props
  };
}

const deletePerson = (id) => {
  fetch("http://localhost:3000/api/add-person", {
    method: "DELETE",
    body: JSON.stringify({ id: id }),
    headers: { "Content-Type": "application/json" },
  });
};

const updatePerson = (x) => {
  fetch("http://localhost:3000/api/add-person", {
    method: "PUT",
    body: JSON.stringify(x),
    headers: { "Content-Type": "application/json" },
  });
};

const createNewPerson = (name, height) => {
  fetch("http://localhost:3000/api/add-person", {
    method: "POST",
    body: JSON.stringify({ first_name: name, height: height }),
    headers: { "Content-Type": "application/json" },
  });
};

const updatePet = (x) => {
  console.log(x);
  fetch("http://localhost:3000/api/add-pet", {
    method: "PUT",
    body: JSON.stringify(x),
    headers: { "Content-Type": "application/json" },
  });
};

const deletePet = (x) => {
  console.log(x);
  fetch("http://localhost:3000/api/add-pet", {
    method: "DELETE",
    body: JSON.stringify(x),
    headers: { "Content-Type": "application/json" },
  });
};

const PetProfile = (props) => {
  const [newName, setNewName] = React.useState(props.p.name);
  const [newDob, setNewDob] = React.useState(props.p.dob);
  const router = useRouter();

  const trigger = () => {
    router.replace(router.asPath);
  };

  return (
    <>
      <label>
        Name of pet:{" "}
        <input
          type="text"
          value={newName}
          onChange={(e) => setNewName(e.target.value)}
        />
      </label>
      <label>
        Dob of pet:{" "}
        <input
          type="text"
          value={newDob}
          onChange={(e) => setNewDob(e.target.value)}
        />
      </label>
      <button
        onClick={() => {
          updatePet({
            name: newName,
            dob: newDob,
            id: props.p.id,
            person_id: props.x.id,
          });
          trigger();
        }}
      >
        update pet
      </button>
      <button
        onClick={() => {
          deletePet({
            id: props.p.id,
            person_id: props.x.id,
          });
          trigger();
        }}
      >
        delete pet
      </button>
    </>
  );
};

const Profile = (props) => {
  const [newFirstName, setNewFirstName] = React.useState(props.x.first_name);
  const [newHeight, setNewHeight] = React.useState(props.x.height);
  return (
    <>
      <label>
        Name:{" "}
        <input
          type="text"
          value={newFirstName}
          onChange={(e) => setNewFirstName(e.target.value)}
        />
      </label>

      <label>
        Height:{" "}
        <input
          type="text"
          value={newHeight}
          onChange={(e) => setNewHeight(e.target.value)}
        />
      </label>
      <button
        onClick={() =>
          updatePerson({
            first_name: newFirstName,
            height: newHeight,
            id: props.x.id,
          })
        }
      >
        update person
      </button>
      {/* {JSON.stringify(props.pets)} */}
      {props.pets &&
        props.pets
          .filter((p) => p.name === props.x.pet_name)
          .map((p) => <PetProfile p={p} x={props.x} />)}
      <button onClick={() => props.setShowingPeople(false)}>close</button>
    </>
  );
};

export default function People(props) {
  const [showingPeople, setShowingPeople] = React.useState(false);
  const [showingId, setShowingId] = React.useState(false);
  const [newPersonFirstName, setNewPersonFirstName] = React.useState("");
  const [newPersonHeight, setNewPersonHeight] = React.useState("");
  const router = useRouter();

  const trigger = () => {
    router.replace(router.asPath);
  };

  const showPerson = (id) => {
    setShowingPeople(true);
    setShowingId(id);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1>Create a new person below:</h1>
        {showingPeople ? (
          <>
            {props.people
              .filter((x) => x.id === showingId)
              .map((x) => (
                <Profile
                  x={x}
                  pets={props.pets}
                  setShowingPeople={setShowingPeople}
                />
              ))}
          </>
        ) : (
          <>
            <label>
              Name:{" "}
              <input
                id="name"
                type="text"
                value={newPersonFirstName}
                onChange={(e) => setNewPersonFirstName(e.target.value)}
              />
            </label>

            <label>
              Height:{" "}
              <input
                type="text"
                value={newPersonHeight}
                onChange={(e) => setNewPersonHeight(e.target.value)}
              />
            </label>
            <hr />
            <button
              style={{ display: "flex", justifyContent: "right" }}
              onClick={() => {
                createNewPerson(newPersonFirstName, newPersonHeight);
                trigger();
              }}
            >
              create person
            </button>
            <h1>List of current people</h1>

            {props.people.map((x) => (
              <div key={x.id}>
                {x.first_name + " "}
                <button onClick={() => showPerson(x.id)}>profile</button>
                <button
                  onClick={() => {
                    deletePerson(x.id);
                    trigger();
                  }}
                >
                  delete
                </button>
              </div>
            ))}
          </>
        )}
      </main>
    </div>
  );
}
